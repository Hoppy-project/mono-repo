# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI to Docker Hub - FrontEnd

on:
  push:
    paths:
      - "frontend/**"
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.16.0]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Check Out Repo 
      uses: actions/checkout@v3
      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
  
#     - name: clean cache
#       run: cd frontend/client && npm cache clean --force

#     - name: clean package-lock.json
#       run: cd frontend/client && rm -rf package-lock.json

    - name: build
      working-directory: ./frontend/client
      run: |
        npm install
        npm run build
        cat /home/runner/.npm/_logs/*.log
        
    - name: npm test
      run: cd frontend/client && npm test

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Docker Hub 로그인
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        
    - name: Docker image Build and push
      id: docker_build
      uses: docker/build-push-action@v3
      with:
        context: ./
        file: ./frontend/Dockerfile
        builder: ${{ steps.buildx.outputs.name }}
        push: true
        tags:  ${{ secrets.DOCKER_HUB_USERNAME }}/hoppy-fe:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new
        
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
      
  deploy:
    needs: build
    name: 무중단 배포 - FE
    runs-on: [ self-hosted, hoppy ]
    steps:
      - name: Docker run
        run: |
          sudo sh /home/ec2-user/deploy-fe.sh
